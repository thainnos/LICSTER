# This workflow will test the python webserver/HMI zapproxy

name: zapproxy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pymodbus WTForms Flask-WTF gunicorn
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        sudo apt install npm
        cd ./devices/hmi/software/app/static
        npm install package.json
        cd ../../
        mkdir instance
        cp test/app.sqlite instance/app.sqlite
        cd ..
        chmod +x startscript.sh        
    - name: start application
      run: |
        cd ./devices/hmi/software
        SECRET="0t0RMYslWW5g^QIrwQsOpMz9tvydonZ8"
        export SECRET_KEY=$SECRET
        echo $SECRET_KEY > secret.key
        gunicorn -w 4 -b 0.0.0.0:8080 "app:create_app()" &
        docker run -t owasp/zap2docker-stable zap-baseline.py -t http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):8080
        ps aux | grep 'unicorn' | awk '{print $2}' | xargs sudo kill -9
